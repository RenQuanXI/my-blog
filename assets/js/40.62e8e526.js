(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{453:function(t,s,n){"use strict";n.r(s);var a=n(12),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"git学习"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#git学习"}},[t._v("#")]),t._v(" git学习")]),t._v(" "),n("h2",{attrs:{id:"_1-git相关基础命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-git相关基础命令"}},[t._v("#")]),t._v(" 1. git相关基础命令")]),t._v(" "),n("h3",{attrs:{id:"_1-1-增加-删除文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-增加-删除文件"}},[t._v("#")]),t._v(" 1.1 增加/删除文件")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加指定文件到暂存区")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以空格隔开可以一次 add 多个文件")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加指定目录到暂存区，包括子目录")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dir"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dir"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加当前目录的所有文件到暂存区，包括子目录")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加每个变化前，都会要求确认")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对于同一个文件的多处变化，可以实现分次提交")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -p\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除工作区文件，并且将这次删除放入暂存区")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -f 是 force 是简写，强制删除的意思")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除文件并直接进入暂存区，以待下一次提交")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -f "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止追踪指定文件，但该文件会保留在工作区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" --cached "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 改名文件，并且将这个改名放入暂存区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file-original"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file-renamed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("h3",{attrs:{id:"_1-2-gitconfig配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-gitconfig配置"}},[t._v("#")]),t._v(" 1.2  .gitconfig配置")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示当前的Git配置")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编辑Git配置文件")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config -e "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--global"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置提交代码时的用户信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--global"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" user.name "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[name]"')]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--global"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" user.email "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[email address]"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看配置的信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取帮助信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" config \n")])])]),n("h3",{attrs:{id:"_1-3-代码提交"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-代码提交"}},[t._v("#")]),t._v(" 1.3. 代码提交")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交暂存区到仓库区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交暂存区的指定文件到仓库区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". -m "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交工作区自上次commit之后的变化，直接到仓库区")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意：不包括未跟踪文件")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a -m "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"提交日志"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交时显示所有diff信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -v\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用一次新的commit，替代上一次提交")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果代码没有任何新变化，则用来改写上一次commit的提交信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果代码有变化，则将本次变化和最后一次提交混合形成历史记录")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend -m "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("message"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重做上一次commit，并包括指定文件的新变化")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),n("h3",{attrs:{id:"_1-4-查看状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-查看状态"}},[t._v("#")]),t._v(" 1.4  查看状态")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最好用的是 gitk")]),t._v("\n$ gitk\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示有变更的文件")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示当前分支的版本历史")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示commit历史，以及每次commit发生变更的文件")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --stat\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 搜索提交历史，根据关键词")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -S "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyword"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某个commit之后的所有变动，每个commit占据一行")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" HEAD --pretty"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("format:%s\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 显示某个commit之后的所有变动，其"提交说明"必须符合搜索条件')]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" HEAD --grep feature\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某个文件的版本历史，包括文件改名")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --follow "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" whatchanged "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示指定文件相关的每一次diff")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -p "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示过去5次提交")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -5 --pretty --oneline\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有提交过的用户，按提交次数排序")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" shortlog -sn\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示指定文件是什么人在什么时间修改过")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" blame "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示暂存区和工作区的差异")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示暂存区和上一个commit的差异")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --cached "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示工作区与当前分支最新commit之间的差异")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示两次提交之间的差异")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("first-branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("second-branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示今天你写了多少行代码")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --shortstat "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@{0 day ago}"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某次提交的元数据和内容变化")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某次提交发生变化的文件")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show --name-only "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某次提交时，某个文件的内容")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示当前分支的最近几次提交")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog\n")])])]),n("h3",{attrs:{id:"_1-5-撤销操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-撤销操作"}},[t._v("#")]),t._v(" 1.5  撤销操作")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改最后一次提交")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果暂存区没有新的内容，则仅仅修改提交日志")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果有新内容，则将本地新内容混入修改的提交中")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend -m "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复暂存区的指定文件到工作区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复某个commit的指定文件到暂存区和工作区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复暂存区的所有文件到工作区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置暂存区的指定文件，与上一次 commit 保持一致，但工作区不变")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置暂存区与工作区，与上一次commit保持一致（也就是说加了--hard的话会强制将没有commit的文件覆盖掉）")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置当前HEAD为指定commit，但保持暂存区和工作区不变")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --keep "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个commit，用来撤销指定commit")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 后者的所有变化都将被前者抵消，并且应用到当前分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暂时将未提交的变化移除，稍后再移入")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop\n")])])]),n("h3",{attrs:{id:"_1-6-标签"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-标签"}},[t._v("#")]),t._v(" 1.6  标签")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有tag")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个tag在当前commit")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个tag在指定commit")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除本地tag")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -d "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程tag")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :refs/tags/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tagName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看tag信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交指定tag")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交所有tag")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --tags\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个分支，指向某个tag")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),n("h3",{attrs:{id:"_1-7-分支"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-分支"}},[t._v("#")]),t._v(" 1.7  分支")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个分支，但依然停留在当前分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到指定分支，并更新工作区")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个分支，并切换到该分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个分支，指向指定commit")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到上一个分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有本地分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有远程分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -r\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有本地分支和远程分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -a\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并指定分支到当前分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建一个分支，与指定的远程分支建立追踪关系")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --track "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote-branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 建立追踪关系，在现有分支与指定的远程分支之间")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --set-upstream "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote-branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择一个commit，合并进当前分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程分支")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin --delete "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch-name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -dr "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote/branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个全新的分支 不包含原分支的提交历史")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout --orphan gh-pages\n")])])]),n("h2",{attrs:{id:"_2-远程仓库使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-远程仓库使用"}},[t._v("#")]),t._v(" 2. 远程仓库使用")]),t._v(" "),n("h3",{attrs:{id:"_2-1-克隆线上仓库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-克隆线上仓库"}},[t._v("#")]),t._v(" 2.1  克隆线上仓库")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone 仓库地址\n")])])]),n("p",[t._v("​\t先写代码，写完代码提交本地仓库然后")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clone 下来的仓库会自动创建一个名字叫 origin 的 remote 远端地址")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 并且自动和 origin master 建立关系")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所以你这里可以直接 git push")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])]),n("p",[t._v("但是，如果要是推送别的分支代码，还是得：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u 仓库地址别名 本地分支:远程分支\n")])])]),n("h3",{attrs:{id:"_2-2-将本地仓库放在线上"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-将本地仓库放在线上"}},[t._v("#")]),t._v(" 2.2 将本地仓库放在线上")]),t._v(" "),n("p",[t._v("如何把一个本地仓库放到 GitHub：")]),t._v(" "),n("ol",[n("li",[t._v("在 GitHub 中新建一个远程仓库")]),t._v(" "),n("li",[t._v("在本地仓库下执行")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 别名我们通常喜欢使用 origin 作为默认仓库的别名")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" 别名 远程仓库地址\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当本地分支和远程分支名字一样的时候，可以简写只写一些")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -u 的作用是记住本次的 push 地址和分支信息")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果不加 -u，则下一次 push 的时候，还需要使用完整的命令")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u 远程仓库地址别名 本地分支:远程分支\n\n如果要推送的本地分支和远端分支已有，可以简写为\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin 分支\n")])])]),n("p",[t._v("之后有了新的历史记录的时候，直接 ：")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])]),n("p",[t._v("推送不同分支的话")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u 远程仓库地址别名 本地分支:远程分支\n")])])]),n("h3",{attrs:{id:"_2-3-拉取和更新远程仓库的代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-拉取和更新远程仓库的代码"}},[t._v("#")]),t._v(" 2.3   拉取和更新远程仓库的代码")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载远程仓库的所有变动")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有远程仓库")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某个远程仓库的信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote show "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 增加一个新的远程仓库，并命名")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("shortname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 直接拉取远程仓库当前分支的代码")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取回远程仓库的变化，并与本地分支合并")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上传本地指定分支到远程仓库")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强行推送当前分支到远程仓库，即使有冲突")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --force\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推送所有分支到远程仓库")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --all\n")])])]),n("h3",{attrs:{id:"_2-4npm切换镜像源"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-4npm切换镜像源"}},[t._v("#")]),t._v(" 2.4npm切换镜像源")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换淘宝镜像")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" registry https://registry.npm.taobao.org\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换国外镜像")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" registry https://registry.npmjs.org/\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http://npm-registry.iyunxiao.com 爱云校的镜像")]),t._v("\n")])])]),n("h2",{attrs:{id:"_3-git应用技巧"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-git应用技巧"}},[t._v("#")]),t._v(" 3.  git应用技巧")]),t._v(" "),n("h3",{attrs:{id:"_3-1-创建线上分支"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-创建线上分支"}},[t._v("#")]),t._v(" 3.1  创建线上分支")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("切换本地master分支，然后执行"),n("code",[t._v("git checkout -b 新分支名")]),t._v(" 在本地新创建一个分支")])]),t._v(" "),n("li",[n("p",[t._v("执行"),n("code",[t._v("git push")]),t._v(" 往线上推送一下，这个时候因为线上没有新创建的这个分支他会提示"),n("code",[t._v("git push --set-upstream origin 新分支名")])])]),t._v(" "),n("li",[n("p",[t._v("这个时候就直接执行它提示的这个就可以直接在线上仓库创建这个分支，并把本地代码提交上去了")])])]),t._v(" "),n("h3",{attrs:{id:"_3-2-git回退之前版本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-git回退之前版本"}},[t._v("#")]),t._v(" 3.2  git回退之前版本")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("git在提交提交仓库的时候会生成commit ID 执行命令"),n("code",[t._v("git log")]),t._v("可以查看之前提交生成的commit ID")])]),t._v(" "),n("li",[n("p",[t._v("回退上一个版本的话需要执行"),n("code",[t._v("git reset --hard HEAD^")]),t._v("，就可以回退到上一个的版本了，")]),t._v(" "),n("blockquote",[n("p",[t._v("首先，Git必须知道当前版本是哪个版本，在Git中，用"),n("code",[t._v("HEAD")]),t._v("表示当前版本，上一个版本就是"),n("code",[t._v("HEAD^")]),t._v("，上上一个版本就是"),n("code",[t._v("HEAD^^")]),t._v("，当然往上100个版本写100个"),n("code",[t._v("^")]),t._v("比较容易数不过来，所以写成"),n("code",[t._v("HEAD~100")]),t._v("。")])])]),t._v(" "),n("li",[n("p",[t._v("回退到指定版本的话就直接执行"),n("code",[t._v("git reset -- hard commitID")]),t._v("就可以了")])]),t._v(" "),n("li",[n("p",[t._v("回退到之前的版本以后，再次执行git log 回发现后面提交的记录不见了，此时要想回到之后提交的版本的话可以使用"),n("code",[t._v("git reflog")]),t._v("查看之后提交的版本号，拿到版本号以后执行"),n("code",[t._v("git reset -- hard commitID")]),t._v("就可以了")]),t._v(" "),n("blockquote",[n("p",[n("code",[t._v("git reflog")]),t._v("   和 "),n("code",[t._v("git log")]),t._v("的区别")]),t._v(" "),n("p",[t._v("​\t\t\t前者是可以看到所以所有的记录包括删除，会退， add，commit等等的所有操作的记录")]),t._v(" "),n("p",[t._v("​\t\t\t后者是只可以看到commit记录")]),t._v(" "),n("p",[n("code",[t._v("git reset")]),t._v("的时候加不加--hard的去别")]),t._v(" "),n("p",[t._v("​\t\t\t加的话会在回退版本的时候直接覆盖到本地目前还没有commit的所有代码，也包括已经add过但还没commit的")]),t._v(" "),n("p",[t._v("​\t\t\t不加的话不会，所以在使用这个命令的时候最好还是不要加 -- hard")]),t._v(" "),n("p",[t._v("如果真的不小心就是用了的话不要，那就要想办法处理了")])])])]),t._v(" "),n("p",[t._v("回滚操作（网上找来的方法，估计不一定靠谱）")]),t._v(" "),n("p",[t._v("在本地要想回滚到之前的某个版本需要做以下操作（没有提交远程分支）")]),t._v(" "),n("ol",[n("li",[t._v("执行"),n("code",[t._v("git log")]),t._v(" 查看你要回滚的commitID")]),t._v(" "),n("li",[t._v("然后执行"),n("code",[t._v("git checkout commitID")]),t._v(" 回滚到之前的版本")]),t._v(" "),n("li",[t._v("此时你执行"),n("code",[t._v("git branch")]),t._v("会发现现在你正在一个临时的分支上")]),t._v(" "),n("li",[t._v("如果你要在这个会退回来的版本是上做一些操作的，可以在这个临时分支的基础上重新创建一个分支操作")]),t._v(" "),n("li",[t._v("如果需要再切换到正在开发的分支的话，就直接切换到正在开发的分支就行了")])]),t._v(" "),n("p",[t._v("回滚到之前版本（已经提交远程仓库）")]),t._v(" "),n("ol",[n("li",[t._v("使用"),n("code",[t._v("revert")]),t._v("命令，"),n("code",[t._v("revert")]),t._v("命令其实就是提交一个新的"),n("code",[t._v("commit")]),t._v("来回滚之前的"),n("code",[t._v("commit")]),t._v("。")]),t._v(" "),n("li",[t._v("如果想要回滚到之前的某一个状态，那么需要"),n("code",[t._v("revert")]),t._v("掉之前的"),n("code",[t._v("commit")])]),t._v(" "),n("li",[t._v("执行"),n("code",[t._v("git revert 之后的commiID 之后的commitID 之后的commitID")]),t._v(" 删除需要回滚的之后的所有commit记录")]),t._v(" "),n("li",[t._v("然后就可以push了")])]),t._v(" "),n("h3",{attrs:{id:"_3-3存储修改未提交"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3存储修改未提交"}},[t._v("#")]),t._v(" 3.3存储修改未提交")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash  代码可以恢复到任何的分支上去\n")])])]),n("p",[t._v("正在写代码时候有别的时候要做了，比如要去修改个bug，但是本地代码还没写好也没提交此时就可以这么做")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("使用"),n("code",[t._v("git stash")]),t._v(" 将修改以后未提交的代码放在仓储中暂存起来，")])]),t._v(" "),n("li",[n("p",[t._v("然后就可以正常切换分支修改提交代码了")])]),t._v(" "),n("li",[n("p",[t._v("在修改完bug或完其他的操作之后切换到刚才正在开发的分支执行命令git stash list可以查看仓储的存储记录，")])]),t._v(" "),n("li",[n("p",[t._v("恢复方式如下：")]),t._v(" "),n("blockquote",[n("ol",[n("li",[n("p",[t._v("执行"),n("code",[t._v("git stash apply")]),t._v(" 可以直接恢复，但是仓储中的存储记录还在")]),t._v(" "),n("p",[t._v("要想删除记录的话直接执行"),n("code",[t._v("git stash drop")]),t._v("就可以把仓储中的记录删除了")])]),t._v(" "),n("li",[n("p",[t._v("直接执行"),n("code",[t._v("git stash pop")]),t._v(" 恢复代码并删除仓储的存储记录")])])])])])]),t._v(" "),n("h3",{attrs:{id:"_3-4-git中关于test分支的操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-git中关于test分支的操作"}},[t._v("#")]),t._v(" 3.4 git中关于test分支的操作")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("test能不能直接合并master分支")]),t._v(" "),n("blockquote",[n("p",[t._v("不能")]),t._v(" "),n("p",[t._v("因为test分支只是一个测试分支，有时候可能会有很多个迭代同时在进行同时在测试，如果只是自己这一部分代码测试好了别人的还没测试好，肯定是不能合并master然后合并到线上的呀，有时候test分支上可能还有很多垃圾代码，所以他不能直接合并到master，要想合并master的话在自己的代码测试ok后从自己的开发分支合并上去")])])]),t._v(" "),n("li",[n("p",[t._v("test分支能不能直接修改")]),t._v(" "),n("blockquote",[n("p",[t._v("不能")]),t._v(" "),n("p",[t._v("因为改bug的话，改完测试没问题的话肯定是要直接提交到线上的，test分支不能直接合并到master，所以只能从自己的开发分支合并到master，但是在test分支上改完以后你自己的开发分支上是没有你修改的代码的，所以修改bug等等的所有操作多是不能直接在test分支上操作的，都需要自己去切一个分支去操作")])])])]),t._v(" "),n("h3",{attrs:{id:"_3-4-没有切换分支就进行了开发提交"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-没有切换分支就进行了开发提交"}},[t._v("#")]),t._v(" 3.4 没有切换分支就进行了开发提交")]),t._v(" "),n("p",[t._v("情景1:  在开发时没有切换分支就进行了开发，并且在开发完了以后就进行了commit，当commit以后才发现分支是错误的，怎么办?")]),t._v(" "),n("p",[t._v("解决方法：")]),t._v(" "),n("ol",[n("li",[n("blockquote",[n("p",[t._v("首先reset 到当前提交的版本的之前一个版本，然后再它就会把上次commit的代码放在工作区里面，然后再使用"),n("code",[t._v("git stash")]),t._v("将代码放进暂存区，最后切换到正确的分支上，再使用"),n("code",[t._v("git stash pop")]),t._v("还原就行了")])])])]),t._v(" "),n("h3",{attrs:{id:"_3-5拉取远程分支到本地"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-5拉取远程分支到本地"}},[t._v("#")]),t._v(" 3.5拉取远程分支到本地")]),t._v(" "),n("p",[t._v("先把远程分支拉取到本地来")]),t._v(" "),n("p",[n("code",[t._v("git fetch origin 远程分支名")])]),t._v(" "),n("p",[t._v("执行完了以后会提示")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fix-0609 是我远程分支的名字")]),t._v("\n * branch              fix-0609   -"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" FETCH_HEAD\n * "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("new branch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("        fix-0609   -"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" origin/fix-0609\n")])])]),n("p",[t._v("此时是告诉你要在本地建立一个分支并且和远程分支建立起关联")]),t._v(" "),n("p",[t._v("可以执行")]),t._v(" "),n("p",[n("code",[t._v("git checkout -b 本地分支名 orgin/远程分支名")])]),t._v(" "),n("p",[t._v("远程分支和本地分支就关联起来了 可以pull或者push了")]),t._v(" "),n("h3",{attrs:{id:"_3-6-修改本地分支名称"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-修改本地分支名称"}},[t._v("#")]),t._v(" 3.6 修改本地分支名称")]),t._v(" "),n("ol",[n("li",[t._v("是当前分支："),n("code",[t._v("git branch -m 原分支名称")])]),t._v(" "),n("li",[t._v("不是当前分支"),n("code",[t._v("git branch -m 原分支名 新分支名")])])]),t._v(" "),n("h3",{attrs:{id:"_3-7-关闭本地占用的端口号"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-关闭本地占用的端口号"}},[t._v("#")]),t._v(" 3.7 关闭本地占用的端口号")]),t._v(" "),n("p",[t._v("查询端口号被谁占用  "),n("code",[t._v("lsof -i: 8009")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("rqxde-MacBook-Air:analysis-front rqx$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" -i:8009\nCOMMAND PID "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("   FD   TYPE             DEVICE SIZE/OFF NODE NAME\nnode    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("805")]),t._v("  rqx   15u  IPv6 0xca4901061b904643      0t0  TCP *:8009 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LISTEN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 805 就是被占用的位置 ")]),t._v("\n")])])]),n("p",[t._v("查询出被占用的位置后关闭占用  "),n("code",[t._v("kill 805")])]),t._v(" "),n("h3",{attrs:{id:"_3-8回滚到上上个版本-但不覆盖上个版本的修改"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8回滚到上上个版本-但不覆盖上个版本的修改"}},[t._v("#")]),t._v(" 3.8回滚到上上个版本，但不覆盖上个版本的修改")]),t._v(" "),n("p",[t._v("当修改了向项目中的内容以后并且已经 commit了，但还没有push呢， 此时发现修改的有问题，需要回到上上个版本，但是又不想被覆盖掉刚刚commit的内容")]),t._v(" "),n("p",[t._v("此时可以使用"),n("code",[t._v("git reset --sort HARD~1")])]),t._v(" "),n("h3",{attrs:{id:"_3-9-git-基础配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-git-基础配置"}},[t._v("#")]),t._v(" 3.9 git 基础配置")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示当前的Git配置 ")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置提交代码时的用户信息")]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--global"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" user.name "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[name]"')]),t._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--global"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" user.email "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[email address]"')]),t._v("\n\n\n\n")])])]),n("h3",{attrs:{id:"_3-10-git-某个分支的代码完全覆盖当前分支"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-git-某个分支的代码完全覆盖当前分支"}},[t._v("#")]),t._v(" 3.10 git 某个分支的代码完全覆盖当前分支")]),t._v(" "),n("p",[t._v("这个操作要区别于git merge dev的是 merge操作是把其他分支修改代码合并到当前分支，当前分支的一些不同代码还在，而这个命令是直接完全覆盖掉当前分支的所有代码")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#切换到需要被覆盖的分支")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard dev "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#然后执行这个dev是你想用那个分支覆盖当前分支比如dev覆盖master")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master --force "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当前分支代码强制推送到远程仓库里")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);